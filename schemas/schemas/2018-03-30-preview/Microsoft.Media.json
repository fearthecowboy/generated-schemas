{
  "id": "https://schema.management.azure.com/schemas/2018-03-30-preview/Microsoft.Media.json#",
  "$schema": "http://json-schema.org/draft-04/schema#",
  "title": "Microsoft.Media",
  "description": "Microsoft Media Resource Types",
  "resourceDefinitions": {
    "mediaservices": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The Media Services account name."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaservices"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-03-30-preview"
          ]
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "description": "The Azure Region of the resource."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/MediaServiceProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Properties of the Media Services account."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/mediaservices_streamingEndpoints_childResource"
              },
              {
                "$ref": "#/definitions/mediaservices_liveEvents_childResource"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Media/mediaservices"
    },
    "mediaServices_assets": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The Asset name."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaServices/assets"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-03-30-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/AssetProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The Asset properties."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Media/mediaServices/assets"
    },
    "mediaServices_contentKeyPolicies": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The Content Key Policy name."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaServices/contentKeyPolicies"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-03-30-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The properties of the Content Key Policy."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Media/mediaServices/contentKeyPolicies"
    },
    "mediaservices_liveEvents": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The name of the Live Event."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaservices/liveEvents"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-03-30-preview"
          ]
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "description": "The Azure Region of the resource."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The Live Event properties."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/mediaservices_liveEvents_liveOutputs_childResource"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Media/mediaservices/liveEvents"
    },
    "mediaservices_liveEvents_liveOutputs": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^([a-zA-Z0-9])+(-*[a-zA-Z0-9])*$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The name of the Live Output."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaservices/liveEvents/liveOutputs"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-03-30-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/LiveOutputProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The JSON object that contains the properties required to create a Live Output."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Media/mediaservices/liveEvents/liveOutputs"
    },
    "mediaservices_streamingEndpoints": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The name of the StreamingEndpoint."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaservices/streamingEndpoints"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-03-30-preview"
          ]
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "description": "The Azure Region of the resource."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingEndpointProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The StreamingEndpoint properties."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Media/mediaservices/streamingEndpoints"
    },
    "mediaServices_streamingLocators": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The Streaming Locator name."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaServices/streamingLocators"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-03-30-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingLocatorProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Class to specify properties of Streaming Locator"
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Media/mediaServices/streamingLocators"
    },
    "mediaServices_streamingPolicies": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The Streaming Policy name."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaServices/streamingPolicies"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-03-30-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Class to specify properties of Streaming Policy"
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Media/mediaServices/streamingPolicies"
    },
    "mediaServices_transforms": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The Transform name."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaServices/transforms"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-03-30-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/TransformProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "A Transform."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/mediaServices_transforms_jobs_childResource"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Media/mediaServices/transforms"
    },
    "mediaServices_transforms_jobs": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The Job name."
        },
        "type": {
          "type": "string",
          "enum": [
            "Microsoft.Media/mediaServices/transforms/jobs"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-03-30-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/JobProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Properties of the Job."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Media/mediaServices/transforms/jobs"
    }
  },
  "definitions": {
    "AkamaiAccessControl": {
      "type": "object",
      "properties": {
        "akamaiSignatureHeaderAuthenticationKeyList": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AkamaiSignatureHeaderAuthenticationKey"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "authentication key list"
        }
      },
      "description": "Akamai access control"
    },
    "AkamaiSignatureHeaderAuthenticationKey": {
      "type": "object",
      "properties": {
        "identifier": {
          "type": "string",
          "description": "identifier of the key"
        },
        "base64Key": {
          "type": "string",
          "description": "authentication key"
        },
        "expiration": {
          "type": "string",
          "format": "date-time",
          "description": "The exact time the authentication key."
        }
      },
      "description": "Akamai Signature Header authentication key."
    },
    "AssetProperties": {
      "type": "object",
      "properties": {
        "alternateId": {
          "type": "string",
          "description": "The alternate ID of the Asset."
        },
        "description": {
          "type": "string",
          "description": "The Asset description."
        },
        "container": {
          "type": "string",
          "description": "The name of the asset blob container."
        },
        "storageAccountName": {
          "type": "string",
          "description": "The name of the storage account."
        }
      },
      "description": "The Asset properties."
    },
    "CbcsDrmConfiguration": {
      "type": "object",
      "properties": {
        "fairPlay": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyFairPlayConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Class to specify configurations of FairPlay in Streaming Policy"
        },
        "playReady": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyPlayReadyConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Class to specify configurations of PlayReady in Streaming Policy"
        },
        "widevine": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyWidevineConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Class to specify configurations of Widevine in Streaming Policy"
        }
      },
      "description": "Class to specify drm configurations of CommonEncryptionCbcs scheme in Streaming Policy"
    },
    "CencDrmConfiguration": {
      "type": "object",
      "properties": {
        "playReady": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyPlayReadyConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Class to specify configurations of PlayReady in Streaming Policy"
        },
        "widevine": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyWidevineConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Class to specify configurations of Widevine in Streaming Policy"
        }
      },
      "description": "Class to specify drm configurations of CommonEncryptionCenc scheme in Streaming Policy"
    },
    "CommonEncryptionCbcs": {
      "type": "object",
      "properties": {
        "enabledProtocols": {
          "oneOf": [
            {
              "$ref": "#/definitions/EnabledProtocols"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Class to specify which protocols are enabled"
        },
        "clearTracks": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TrackSelection"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Representing which tracks should not be encrypted"
        },
        "contentKeys": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyContentKeys"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Class to specify properties of all content keys in Streaming Policy"
        },
        "drm": {
          "oneOf": [
            {
              "$ref": "#/definitions/CbcsDrmConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Class to specify drm configurations of CommonEncryptionCbcs scheme in Streaming Policy"
        }
      },
      "description": "Class for CommonEncryptionCbcs encryption scheme"
    },
    "CommonEncryptionCenc": {
      "type": "object",
      "properties": {
        "enabledProtocols": {
          "oneOf": [
            {
              "$ref": "#/definitions/EnabledProtocols"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Class to specify which protocols are enabled"
        },
        "clearTracks": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TrackSelection"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Representing which tracks should not be encrypted"
        },
        "contentKeys": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyContentKeys"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Class to specify properties of all content keys in Streaming Policy"
        },
        "drm": {
          "oneOf": [
            {
              "$ref": "#/definitions/CencDrmConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Class to specify drm configurations of CommonEncryptionCenc scheme in Streaming Policy"
        }
      },
      "description": "Class for envelope encryption scheme"
    },
    "ContentKeyPolicyConfiguration": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "ContentKeyPolicyConfiguration"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Base class for Content Key Policy configuration. A derived class must be used to create a configuration."
    },
    "ContentKeyPolicyOption": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The Policy Option description."
        },
        "configuration": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyConfiguration"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Base class for Content Key Policy configuration. A derived class must be used to create a configuration."
        },
        "restriction": {
          "oneOf": [
            {
              "$ref": "#/definitions/ContentKeyPolicyRestriction"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Base class for Content Key Policy restrictions. A derived class must be used to create a restriction."
        }
      },
      "required": [
        "configuration",
        "restriction"
      ],
      "description": "Represents a policy option."
    },
    "ContentKeyPolicyProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "A description for the Policy."
        },
        "options": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContentKeyPolicyOption"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The Key Policy options."
        }
      },
      "required": [
        "options"
      ],
      "description": "The properties of the Content Key Policy."
    },
    "ContentKeyPolicyRestriction": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "ContentKeyPolicyRestriction"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Base class for Content Key Policy restrictions. A derived class must be used to create a restriction."
    },
    "CrossSiteAccessPolicies": {
      "type": "object",
      "properties": {
        "clientAccessPolicy": {
          "type": "string",
          "description": "The content of clientaccesspolicy.xml used by Silverlight."
        },
        "crossDomainPolicy": {
          "type": "string",
          "description": "The content of crossdomain.xml used by Silverlight."
        }
      },
      "description": "The client access policy."
    },
    "DefaultKey": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "description": "Label can be used to specify Content Key when creating Streaming Locator"
        },
        "policyName": {
          "type": "string",
          "description": "Policy used by Default Key"
        }
      },
      "description": "Class to specify properties of default content key for each encryption scheme"
    },
    "EnabledProtocols": {
      "type": "object",
      "properties": {
        "download": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Enable Download protocol or not"
        },
        "dash": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Enable Dash protocol or not"
        },
        "hls": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Enable Hls protocol or not"
        },
        "smoothStreaming": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Enable SmoothStreaming protocol or not"
        }
      },
      "required": [
        "download",
        "dash",
        "hls",
        "smoothStreaming"
      ],
      "description": "Class to specify which protocols are enabled"
    },
    "EnvelopeEncryption": {
      "type": "object",
      "properties": {
        "enabledProtocols": {
          "oneOf": [
            {
              "$ref": "#/definitions/EnabledProtocols"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Class to specify which protocols are enabled"
        },
        "clearTracks": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TrackSelection"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Representing which tracks should not be encrypted"
        },
        "contentKeys": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingPolicyContentKeys"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Class to specify properties of all content keys in Streaming Policy"
        },
        "customLicenseAcquisitionUrlTemplate": {
          "type": "string",
          "description": "LicenseAcquisitionUrlTemplate is used to point to user specified service to delivery content keys"
        }
      },
      "description": "Class for EnvelopeEncryption encryption scheme"
    },
    "Hls": {
      "type": "object",
      "properties": {
        "fragmentsPerTsSegment": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The amount of fragments per HTTP Live Streaming (HLS) segment."
        }
      },
      "description": "The HLS configuration."
    },
    "IPAccessControl": {
      "type": "object",
      "properties": {
        "allow": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IPRange"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The IP allow list."
        }
      },
      "description": "The IP access control."
    },
    "IPRange": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The friendly name for the IP address range."
        },
        "address": {
          "type": "string",
          "description": "The IP address."
        },
        "subnetPrefixLength": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The subnet mask prefix length (see CIDR notation)."
        }
      },
      "description": "The IP address range in the CIDR scheme."
    },
    "JobInput": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "JobInput"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "label": {
          "type": "string",
          "description": "A label that is assigned to a JobInput, that is used to satisfy a reference used in the Transform. For example, a Transform can be authored so as to take an image file with the label 'xyz' and apply it as an overlay onto the input video before it is encoded. When submitting a Job, exactly one of the JobInputs should be the image file, and it should have the label 'xyz'."
        },
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Base class for inputs to a Job."
    },
    "JobOutput": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "JobOutput"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Describes all the properties of a JobOutput."
    },
    "JobProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Optional customer supplied description of the Job."
        },
        "input": {
          "oneOf": [
            {
              "$ref": "#/definitions/JobInput"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Base class for inputs to a Job."
        },
        "outputs": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/JobOutput"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The outputs for the Job."
        },
        "priority": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Low",
                "Normal",
                "High"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Priority with which the job should be processed. Higher priority jobs are processed before lower priority jobs. If not set, the default is normal."
        }
      },
      "required": [
        "input",
        "outputs"
      ],
      "description": "Properties of the Job."
    },
    "LiveEventEncoding": {
      "type": "object",
      "properties": {
        "encodingType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "None",
                "Basic"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The encoding type for Live Event."
        },
        "presetName": {
          "type": "string",
          "description": "The encoding preset name."
        }
      },
      "description": "The Live Event encoding."
    },
    "LiveEventEndpoint": {
      "type": "object",
      "properties": {
        "protocol": {
          "type": "string",
          "description": "The endpoint protocol."
        },
        "url": {
          "type": "string",
          "description": "The endpoint URL."
        }
      },
      "description": "The Live Event endpoint."
    },
    "LiveEventInput": {
      "type": "object",
      "properties": {
        "streamingProtocol": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "FragmentedMP4",
                "RTMP"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The streaming protocol for the Live Event."
        },
        "keyFrameIntervalDuration": {
          "type": "string",
          "description": "ISO 8601 timespan duration of the key frame interval duration."
        },
        "accessToken": {
          "type": "string",
          "description": "The access token."
        },
        "endpoints": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LiveEventEndpoint"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The input endpoints for the Live Event."
        }
      },
      "required": [
        "streamingProtocol"
      ],
      "description": "The Live Event input."
    },
    "LiveEventPreview": {
      "type": "object",
      "properties": {
        "endpoints": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/LiveEventEndpoint"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The endpoints for preview."
        },
        "accessControl": {
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventPreviewAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The IP access control for Live Event preview."
        },
        "previewLocator": {
          "type": "string",
          "description": "The preview locator Guid."
        },
        "streamingPolicyName": {
          "type": "string",
          "description": "The name of streaming policy used for LiveEvent preview"
        }
      },
      "description": "The Live Event preview."
    },
    "LiveEventPreviewAccessControl": {
      "type": "object",
      "properties": {
        "ip": {
          "oneOf": [
            {
              "$ref": "#/definitions/IPAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The IP access control."
        }
      },
      "description": "The IP access control for Live Event preview."
    },
    "LiveEventProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "The Live Event description."
        },
        "input": {
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventInput"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The Live Event input."
        },
        "preview": {
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventPreview"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The Live Event preview."
        },
        "encoding": {
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventEncoding"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The Live Event encoding."
        },
        "crossSiteAccessPolicies": {
          "oneOf": [
            {
              "$ref": "#/definitions/CrossSiteAccessPolicies"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The client access policy."
        },
        "vanityUrl": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The Live Event vanity URL flag."
        },
        "streamOptions": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "Default",
                  "LowLatency"
                ]
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The stream options."
        }
      },
      "required": [
        "input"
      ],
      "description": "The Live Event properties."
    },
    "LiveOutputProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "The description of the Live Output."
        },
        "assetName": {
          "type": "string",
          "description": "The asset name."
        },
        "archiveWindowLength": {
          "type": "string",
          "format": "duration",
          "description": "ISO 8601 timespan duration of the archive window length. This is duration that customer want to retain the recorded content."
        },
        "manifestName": {
          "type": "string",
          "description": "The manifest file name."
        },
        "hls": {
          "oneOf": [
            {
              "$ref": "#/definitions/Hls"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The HLS configuration."
        },
        "outputSnapTime": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The output snapshot time."
        }
      },
      "required": [
        "assetName",
        "archiveWindowLength"
      ],
      "description": "The JSON object that contains the properties required to create a Live Output."
    },
    "MediaServiceProperties": {
      "type": "object",
      "properties": {
        "storageAccounts": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StorageAccount"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The storage accounts for this resource."
        }
      },
      "description": "Properties of the Media Services account."
    },
    "mediaservices_liveEvents_childResource": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The name of the Live Event."
        },
        "type": {
          "type": "string",
          "enum": [
            "liveEvents"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-03-30-preview"
          ]
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "description": "The Azure Region of the resource."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/LiveEventProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The Live Event properties."
        },
        "resources": {
          "type": "array",
          "items": {
            "oneOf": [
              {
                "$ref": "#/definitions/mediaservices_liveEvents_liveOutputs_childResource"
              }
            ]
          }
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Media/mediaservices/liveEvents"
    },
    "mediaservices_liveEvents_liveOutputs_childResource": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^([a-zA-Z0-9])+(-*[a-zA-Z0-9])*$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The name of the Live Output."
        },
        "type": {
          "type": "string",
          "enum": [
            "liveOutputs"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-03-30-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/LiveOutputProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The JSON object that contains the properties required to create a Live Output."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Media/mediaservices/liveEvents/liveOutputs"
    },
    "mediaservices_streamingEndpoints_childResource": {
      "type": "object",
      "properties": {
        "name": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[a-zA-Z0-9]+(-*[a-zA-Z0-9])*$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The name of the StreamingEndpoint."
        },
        "type": {
          "type": "string",
          "enum": [
            "streamingEndpoints"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-03-30-preview"
          ]
        },
        "tags": {
          "oneOf": [
            {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Resource tags."
        },
        "location": {
          "type": "string",
          "description": "The Azure Region of the resource."
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingEndpointProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The StreamingEndpoint properties."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Media/mediaservices/streamingEndpoints"
    },
    "mediaServices_transforms_jobs_childResource": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "The Job name."
        },
        "type": {
          "type": "string",
          "enum": [
            "jobs"
          ]
        },
        "apiVersion": {
          "type": "string",
          "enum": [
            "2018-03-30-preview"
          ]
        },
        "properties": {
          "oneOf": [
            {
              "$ref": "#/definitions/JobProperties"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Properties of the Job."
        }
      },
      "required": [
        "name",
        "type",
        "apiVersion",
        "properties"
      ],
      "description": "Microsoft.Media/mediaServices/transforms/jobs"
    },
    "NoEncryption": {
      "type": "object",
      "properties": {
        "enabledProtocols": {
          "oneOf": [
            {
              "$ref": "#/definitions/EnabledProtocols"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Class to specify which protocols are enabled"
        }
      },
      "description": "Class for NoEncryption scheme"
    },
    "Preset": {
      "type": "object",
      "oneOf": [
        {
          "properties": {
            "@odata.type": {
              "oneOf": [
                {
                  "type": "string",
                  "enum": [
                    "Preset"
                  ]
                },
                {
                  "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
                }
              ]
            }
          }
        }
      ],
      "properties": {
        "@odata.type": {
          "type": "string"
        }
      },
      "required": [
        "@odata.type"
      ],
      "description": "Base type for all Presets, which define the recipe or instructions on how the input media files should be processed."
    },
    "StorageAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "The ID of the storage account resource. Media Services relies on tables and queues as well as blobs, so the primary storage account must be a Standard Storage account (either Microsoft.ClassicStorage or Microsoft.Storage). Blob only storage accounts can be added as secondary storage accounts."
        },
        "type": {
          "type": "string",
          "enum": [
            "Primary",
            "Secondary"
          ],
          "description": "The type of the storage account."
        }
      },
      "required": [
        "type"
      ],
      "description": "The storage account details."
    },
    "StreamingEndpointAccessControl": {
      "type": "object",
      "properties": {
        "akamai": {
          "oneOf": [
            {
              "$ref": "#/definitions/AkamaiAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Akamai access control"
        },
        "ip": {
          "oneOf": [
            {
              "$ref": "#/definitions/IPAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The IP access control."
        }
      },
      "description": "StreamingEndpoint access control definition."
    },
    "StreamingEndpointProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "The StreamingEndpoint description."
        },
        "scaleUnits": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The number of scale units."
        },
        "availabilitySetName": {
          "type": "string",
          "description": "AvailabilitySet name"
        },
        "accessControl": {
          "oneOf": [
            {
              "$ref": "#/definitions/StreamingEndpointAccessControl"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "StreamingEndpoint access control definition."
        },
        "maxCacheAge": {
          "oneOf": [
            {
              "type": "integer"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Max cache age"
        },
        "customHostNames": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The custom host names of the StreamingEndpoint"
        },
        "cdnEnabled": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The CDN enabled flag."
        },
        "cdnProvider": {
          "type": "string",
          "description": "The CDN provider name."
        },
        "cdnProfile": {
          "type": "string",
          "description": "The CDN profile name."
        },
        "crossSiteAccessPolicies": {
          "oneOf": [
            {
              "$ref": "#/definitions/CrossSiteAccessPolicies"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "The client access policy."
        }
      },
      "description": "The StreamingEndpoint properties."
    },
    "StreamingLocatorProperties": {
      "type": "object",
      "properties": {
        "assetName": {
          "type": "string",
          "description": "Asset Name"
        },
        "startTime": {
          "type": "string",
          "format": "date-time",
          "description": "StartTime of Streaming Locator"
        },
        "endTime": {
          "type": "string",
          "format": "date-time",
          "description": "EndTime of Streaming Locator"
        },
        "streamingLocatorId": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "StreamingLocatorId of Streaming Locator"
        },
        "streamingPolicyName": {
          "type": "string",
          "description": "Streaming policy name used by this streaming locator. Either specify the name of streaming policy you created or use one of the predefined streaming polices. The predefined streaming policies available are: 'Predefined_DownloadOnly', 'Predefined_ClearStreamingOnly', 'Predefined_DownloadAndClearStreaming', 'Predefined_ClearKey', 'Predefined_SecureStreaming' and 'Predefined_SecureStreamingWithFairPlay'"
        },
        "defaultContentKeyPolicyName": {
          "type": "string",
          "description": "Default ContentKeyPolicy used by this Streaming Locator"
        },
        "contentKeys": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StreamingLocatorUserDefinedContentKey"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "ContentKeys used by this Streaming Locator"
        }
      },
      "required": [
        "assetName",
        "streamingPolicyName"
      ],
      "description": "Class to specify properties of Streaming Locator"
    },
    "StreamingLocatorUserDefinedContentKey": {
      "type": "object",
      "properties": {
        "id": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[0-9a-fA-F]{8}(-[0-9a-fA-F]{4}){3}-[0-9a-fA-F]{12}$"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "ID of Content Key"
        },
        "label": {
          "type": "string",
          "description": "The Content Key description"
        },
        "value": {
          "type": "string",
          "description": "The Content Key secret"
        }
      },
      "required": [
        "id"
      ],
      "description": "Describes the properties of a user-defined content key in the Streaming Locator"
    },
    "StreamingPolicyContentKey": {
      "type": "object",
      "properties": {
        "label": {
          "type": "string",
          "description": "Label can be used to specify Content Key when creating Streaming Locator"
        },
        "policyName": {
          "type": "string",
          "description": "Policy used by Content Key"
        },
        "tracks": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TrackSelection"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Tracks which use this content key"
        }
      },
      "description": "Class to specify properties of content key"
    },
    "StreamingPolicyContentKeys": {
      "type": "object",
      "properties": {
        "defaultKey": {
          "oneOf": [
            {
              "$ref": "#/definitions/DefaultKey"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Class to specify properties of default content key for each encryption scheme"
        },
        "keyToTrackMappings": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StreamingPolicyContentKey"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Representing tracks needs separate content key"
        }
      },
      "description": "Class to specify properties of all content keys in Streaming Policy"
    },
    "StreamingPolicyFairPlayConfiguration": {
      "type": "object",
      "properties": {
        "customLicenseAcquisitionUrlTemplate": {
          "type": "string",
          "description": "The template for a customer service to deliver keys to end users.  Not needed when using Azure Media Services for issuing keys."
        },
        "allowPersistentLicense": {
          "oneOf": [
            {
              "type": "boolean"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "All license to be persistent or not"
        }
      },
      "required": [
        "allowPersistentLicense"
      ],
      "description": "Class to specify configurations of FairPlay in Streaming Policy"
    },
    "StreamingPolicyPlayReadyConfiguration": {
      "type": "object",
      "properties": {
        "customLicenseAcquisitionUrlTemplate": {
          "type": "string",
          "description": "The template for a customer service to deliver keys to end users.  Not needed when using Azure Media Services for issuing keys."
        },
        "playReadyCustomAttributes": {
          "type": "string",
          "description": "Custom attributes for PlayReady"
        }
      },
      "description": "Class to specify configurations of PlayReady in Streaming Policy"
    },
    "StreamingPolicyProperties": {
      "type": "object",
      "properties": {
        "defaultContentKeyPolicyName": {
          "type": "string",
          "description": "Default ContentKey used by current Streaming Policy"
        },
        "envelopeEncryption": {
          "oneOf": [
            {
              "$ref": "#/definitions/EnvelopeEncryption"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Class for EnvelopeEncryption encryption scheme"
        },
        "commonEncryptionCenc": {
          "oneOf": [
            {
              "$ref": "#/definitions/CommonEncryptionCenc"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Class for envelope encryption scheme"
        },
        "commonEncryptionCbcs": {
          "oneOf": [
            {
              "$ref": "#/definitions/CommonEncryptionCbcs"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Class for CommonEncryptionCbcs encryption scheme"
        },
        "noEncryption": {
          "oneOf": [
            {
              "$ref": "#/definitions/NoEncryption"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Class for NoEncryption scheme"
        }
      },
      "description": "Class to specify properties of Streaming Policy"
    },
    "StreamingPolicyWidevineConfiguration": {
      "type": "object",
      "properties": {
        "customLicenseAcquisitionUrlTemplate": {
          "type": "string",
          "description": "The template for a customer service to deliver keys to end users.  Not needed when using Azure Media Services for issuing keys."
        }
      },
      "description": "Class to specify configurations of Widevine in Streaming Policy"
    },
    "TrackPropertyCondition": {
      "type": "object",
      "properties": {
        "property": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Unknown",
                "FourCC"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Track property type."
        },
        "operation": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Unknown",
                "Equal"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Track property condition operation."
        },
        "value": {
          "type": "string",
          "description": "Track property value"
        }
      },
      "required": [
        "property",
        "operation"
      ],
      "description": "Class to specify one track property condition"
    },
    "TrackSelection": {
      "type": "object",
      "properties": {
        "trackSelections": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TrackPropertyCondition"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "TrackSelections is a track property condition list which can specify track(s)"
        }
      },
      "description": "Class to select a track"
    },
    "TransformOutput": {
      "type": "object",
      "properties": {
        "onError": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "StopProcessingJob",
                "ContinueJob"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "A Transform can define more than one outputs. This property defines what the service should do when one output fails - either continue to produce other outputs, or, stop the other outputs. The default is stop."
        },
        "relativePriority": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Low",
                "Normal",
                "High"
              ]
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Sets the relative priority of the TransformOutputs within a Transform. This sets the priority that the service uses for processing TransformOutputs. The default priority is Normal."
        },
        "preset": {
          "oneOf": [
            {
              "$ref": "#/definitions/Preset"
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "Base type for all Presets, which define the recipe or instructions on how the input media files should be processed."
        }
      },
      "required": [
        "preset"
      ],
      "description": "Describes the properties of a TransformOutput, which are the rules to be applied while generating the desired output."
    },
    "TransformProperties": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "An optional verbose description of the Transform."
        },
        "outputs": {
          "oneOf": [
            {
              "type": "array",
              "items": {
                "$ref": "#/definitions/TransformOutput"
              }
            },
            {
              "$ref": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#/definitions/expression"
            }
          ],
          "description": "An array of one or more TransformOutputs that the Transform should generate."
        }
      },
      "required": [
        "outputs"
      ],
      "description": "A Transform."
    }
  }
}
